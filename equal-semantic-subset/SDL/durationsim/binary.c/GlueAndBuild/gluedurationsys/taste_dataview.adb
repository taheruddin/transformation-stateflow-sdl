-- Code automatically generated by asn1scc tool
WITH adaasn1rtl;
WITH TASTE_BasicTypes;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;


PACKAGE BODY TASTE_Dataview IS



FUNCTION asn1SccMyString_Init return asn1SccMyString
IS 
BEGIN
    RETURN asn1SccMyString'(Length => 0,Data => asn1SccMyString_array'( others=> 16#0#)) ;
END asn1SccMyString_Init;

FUNCTION asn1SccMyString_IsConstraintValid(val : in asn1SccMyString) return adaasn1rtl.ASN1_RESULT
IS
    ret : adaasn1rtl.ASN1_RESULT;
 
 
BEGIN
-- OCTET STRING (SIZE(0 .. 255))-------
-- OCTET STRING (SIZE(0 .. 255))


    ret := adaasn1rtl.ASN1_RESULT'(Success => (0 <= val.Length AND val.Length <= 255), ErrorCode => ERR_asn1SccMyString);
    RETURN ret;
END asn1SccMyString_IsConstraintValid;

function asn1SccMyString_Equal(val1, val2: in asn1SccMyString) return Boolean
is
    subtype Slice is Natural range 1 .. val1.Length;
begin
    return (val1.Length = val2.Length and then val1.Data(Slice) = val2.Data(Slice));	
end asn1SccMyString_Equal;

 

END TASTE_Dataview;