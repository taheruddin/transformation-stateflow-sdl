#ifndef __OCARINA_GENERATED_DEPLOYMENT_H_
#define __OCARINA_GENERATED_DEPLOYMENT_H_ 
#include <po_hi_types.h>
/*****************************************************/

/*  This file was automatically generated by Ocarina */

/*  Do NOT hand-modify this file, as your            */

/*  changes will be lost when you re-run Ocarina     */

/*****************************************************/

#define __PO_HI_MY_NODE chip_k

#define __po_hi_vt_gui_out_msg_nb_ports 9

#define __po_hi_vt_gui_gui_polling_gui_nb_ports 8

#define __po_hi_vt_compstate_switch_on_nb_ports 2

#define __po_hi_vt_compstate_switch_off_nb_ports 2

#define __po_hi_vt_compstate_restart_nb_ports 2

#define __po_hi_vt_compstate_start_recording_nb_ports 2

#define __po_hi_vt_compstate_pause_nb_ports 2

#define __po_hi_vt_compstate_resume_nb_ports 2

#define __po_hi_vt_compstate_stop_recording_nb_ports 2

#define __po_hi_vt_compstate_fail_nb_ports 2

/*  For each node in the distributed application add an enumerator*/

typedef enum
{
  chip_k = 0
} __po_hi_node_t;

typedef enum
{
  invalid_protocol = -1
} __po_hi_protocol_t;

/*  For each thread in the distributed application nodes, add an enumerator*/

typedef enum
{
  chip_vt_gui_out_msg_k_entity = 0,
  chip_vt_gui_gui_polling_gui_k_entity = 1,
  chip_vt_compstate_switch_on_k_entity = 2,
  chip_vt_compstate_switch_off_k_entity = 3,
  chip_vt_compstate_restart_k_entity = 4,
  chip_vt_compstate_start_recording_k_entity = 5,
  chip_vt_compstate_pause_k_entity = 6,
  chip_vt_compstate_resume_k_entity = 7,
  chip_vt_compstate_stop_recording_k_entity = 8,
  chip_vt_compstate_fail_k_entity = 9,
  invalid_entity = -1
} __po_hi_entity_t;

typedef enum
{
  chip_vt_gui_out_msg_k = 0,
  chip_vt_gui_gui_polling_gui_k = 1,
  chip_vt_compstate_switch_on_k = 2,
  chip_vt_compstate_switch_off_k = 3,
  chip_vt_compstate_restart_k = 4,
  chip_vt_compstate_start_recording_k = 5,
  chip_vt_compstate_pause_k = 6,
  chip_vt_compstate_resume_k = 7,
  chip_vt_compstate_stop_recording_k = 8,
  chip_vt_compstate_fail_k = 9,
  invalid_task_id = -1
} __po_hi_task_id;

typedef enum
{
  invalid_device_id = -1
} __po_hi_device_id;

typedef enum
{
  invalid_bus_id = -1
} __po_hi_bus_id;

#define __PO_HI_NB_TASKS 10

#define __PO_HI_TASKS_STACK 500000

#define __PO_HI_NB_PROTECTED 2

#define __PO_HI_NB_NODES 1

#define __PO_HI_NB_ENTITIES 10

#define __PO_HI_NB_PORTS 33

typedef enum
{
  vt_gui_out_msg_global_inport_artificial_out_msg = 0,
  vt_gui_out_msg_global_outport_switch_on_vt = 1,
  vt_gui_out_msg_global_outport_switch_off_vt = 2,
  vt_gui_out_msg_global_outport_restart_vt = 3,
  vt_gui_out_msg_global_outport_start_recording_vt = 4,
  vt_gui_out_msg_global_outport_pause_vt = 5,
  vt_gui_out_msg_global_outport_resume_vt = 6,
  vt_gui_out_msg_global_outport_fail_vt = 7,
  vt_gui_out_msg_global_outport_stop_recording_vt = 8,
  vt_gui_gui_polling_gui_global_outport_switch_on_vt = 9,
  vt_gui_gui_polling_gui_global_outport_switch_off_vt = 10,
  vt_gui_gui_polling_gui_global_outport_restart_vt = 11,
  vt_gui_gui_polling_gui_global_outport_start_recording_vt = 12,
  vt_gui_gui_polling_gui_global_outport_pause_vt = 13,
  vt_gui_gui_polling_gui_global_outport_resume_vt = 14,
  vt_gui_gui_polling_gui_global_outport_fail_vt = 15,
  vt_gui_gui_polling_gui_global_outport_stop_recording_vt = 16,
  vt_compstate_switch_on_global_inport_artificial_switch_on = 17,
  vt_compstate_switch_on_global_outport_out_msg_vt = 18,
  vt_compstate_switch_off_global_inport_artificial_switch_off = 19,
  vt_compstate_switch_off_global_outport_out_msg_vt = 20,
  vt_compstate_restart_global_inport_artificial_restart = 21,
  vt_compstate_restart_global_outport_out_msg_vt = 22,
  vt_compstate_start_recording_global_inport_artificial_start_recording = 23,
  vt_compstate_start_recording_global_outport_out_msg_vt = 24,
  vt_compstate_pause_global_inport_artificial_pause = 25,
  vt_compstate_pause_global_outport_out_msg_vt = 26,
  vt_compstate_resume_global_inport_artificial_resume = 27,
  vt_compstate_resume_global_outport_out_msg_vt = 28,
  vt_compstate_stop_recording_global_inport_artificial_stop_recording = 29,
  vt_compstate_stop_recording_global_outport_out_msg_vt = 30,
  vt_compstate_fail_global_inport_artificial_fail = 31,
  vt_compstate_fail_global_outport_out_msg_vt = 32,
  invalid_port_t = -1,
  constant_out_identifier = 34
} __po_hi_port_t;

typedef enum
{
  vt_gui_out_msg_local_inport_artificial_out_msg = 0,
  vt_gui_out_msg_local_outport_switch_on_vt = 1,
  vt_gui_out_msg_local_outport_switch_off_vt = 2,
  vt_gui_out_msg_local_outport_restart_vt = 3,
  vt_gui_out_msg_local_outport_start_recording_vt = 4,
  vt_gui_out_msg_local_outport_pause_vt = 5,
  vt_gui_out_msg_local_outport_resume_vt = 6,
  vt_gui_out_msg_local_outport_fail_vt = 7,
  vt_gui_out_msg_local_outport_stop_recording_vt = 8,
  vt_gui_gui_polling_gui_local_outport_switch_on_vt = 0,
  vt_gui_gui_polling_gui_local_outport_switch_off_vt = 1,
  vt_gui_gui_polling_gui_local_outport_restart_vt = 2,
  vt_gui_gui_polling_gui_local_outport_start_recording_vt = 3,
  vt_gui_gui_polling_gui_local_outport_pause_vt = 4,
  vt_gui_gui_polling_gui_local_outport_resume_vt = 5,
  vt_gui_gui_polling_gui_local_outport_fail_vt = 6,
  vt_gui_gui_polling_gui_local_outport_stop_recording_vt = 7,
  vt_compstate_switch_on_local_inport_artificial_switch_on = 0,
  vt_compstate_switch_on_local_outport_out_msg_vt = 1,
  vt_compstate_switch_off_local_inport_artificial_switch_off = 0,
  vt_compstate_switch_off_local_outport_out_msg_vt = 1,
  vt_compstate_restart_local_inport_artificial_restart = 0,
  vt_compstate_restart_local_outport_out_msg_vt = 1,
  vt_compstate_start_recording_local_inport_artificial_start_recording = 0,
  vt_compstate_start_recording_local_outport_out_msg_vt = 1,
  vt_compstate_pause_local_inport_artificial_pause = 0,
  vt_compstate_pause_local_outport_out_msg_vt = 1,
  vt_compstate_resume_local_inport_artificial_resume = 0,
  vt_compstate_resume_local_outport_out_msg_vt = 1,
  vt_compstate_stop_recording_local_inport_artificial_stop_recording = 0,
  vt_compstate_stop_recording_local_outport_out_msg_vt = 1,
  vt_compstate_fail_local_inport_artificial_fail = 0,
  vt_compstate_fail_local_outport_out_msg_vt = 1,
  invalid_local_port_t = -1
} __po_hi_local_port_t;

#define __PO_HI_NB_DEVICES 0

#define __PO_HI_NB_BUSES 0

#define __PO_HI_NB_PROTOCOLS 0

#define __PO_HI_PORT_TYPE_CONTENT __po_hi_vt_gui_out_msg_nb_ports, __po_hi_vt_gui_gui_polling_gui_nb_ports, __po_hi_vt_compstate_switch_on_nb_ports, __po_hi_vt_compstate_switch_off_nb_ports, __po_hi_vt_compstate_restart_nb_ports, __po_hi_vt_compstate_start_recording_nb_ports, __po_hi_vt_compstate_pause_nb_ports, __po_hi_vt_compstate_resume_nb_ports, __po_hi_vt_compstate_stop_recording_nb_ports, __po_hi_vt_compstate_fail_nb_ports

#endif
