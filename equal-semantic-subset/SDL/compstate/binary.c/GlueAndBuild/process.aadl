--  This file was generated automatically: DO NOT MODIFY IT !

--  This file contains a part of the system CONCURRENCY VIEW.
--  It is an input file for OCARINA.

package process_package
public
	with Deployment;
	with DataView;
	with interfaceview::IV;
	with deploymentview::DV;
	with ocarina_processors_x86;
	with vt_gui_out_msg_CV_Thread;
	with vt_gui_gui_polling_gui_CV_Thread;
	with vt_compstate_switch_on_CV_Thread;
	with vt_compstate_switch_off_CV_Thread;
	with vt_compstate_restart_CV_Thread;
	with vt_compstate_start_recording_CV_Thread;
	with vt_compstate_pause_CV_Thread;
	with vt_compstate_resume_CV_Thread;
	with vt_compstate_stop_recording_CV_Thread;
	with vt_compstate_fail_CV_Thread;

DATA TASTE_Protected
PROPERTIES
	Concurrency_Control_Protocol => Protected_Access;
END TASTE_Protected;

DATA IMPLEMENTATION TASTE_Protected.Object
PROPERTIES
	Concurrency_Control_Protocol => Protected_Access;
END TASTE_Protected.Object;


process chip extends deploymentview::DV::node1::chip
end chip;

process implementation chip.final
subcomponents
	gui_protected : data TASTE_Protected.Object;
	compstate_protected : data TASTE_Protected.Object;
	vt_gui_out_msg : thread vt_gui_out_msg_CV_Thread::vt_gui_out_msg_vt_gui_out_msg.others;
	vt_gui_gui_polling_gui : thread vt_gui_gui_polling_gui_CV_Thread::vt_gui_gui_polling_gui_vt_gui_gui_polling_gui.others;
	vt_compstate_switch_on : thread vt_compstate_switch_on_CV_Thread::vt_compstate_switch_on_vt_compstate_switch_on.others;
	vt_compstate_switch_off : thread vt_compstate_switch_off_CV_Thread::vt_compstate_switch_off_vt_compstate_switch_off.others;
	vt_compstate_restart : thread vt_compstate_restart_CV_Thread::vt_compstate_restart_vt_compstate_restart.others;
	vt_compstate_start_recording : thread vt_compstate_start_recording_CV_Thread::vt_compstate_start_recording_vt_compstate_start_recording.others;
	vt_compstate_pause : thread vt_compstate_pause_CV_Thread::vt_compstate_pause_vt_compstate_pause.others;
	vt_compstate_resume : thread vt_compstate_resume_CV_Thread::vt_compstate_resume_vt_compstate_resume.others;
	vt_compstate_stop_recording : thread vt_compstate_stop_recording_CV_Thread::vt_compstate_stop_recording_vt_compstate_stop_recording.others;
	vt_compstate_fail : thread vt_compstate_fail_CV_Thread::vt_compstate_fail_vt_compstate_fail.others;
connections
	PORT vt_gui_out_msg.OUTPORT_switch_on_vt -> vt_compstate_switch_on.INPORT_artificial_switch_on;
	PORT vt_gui_out_msg.OUTPORT_switch_off_vt -> vt_compstate_switch_off.INPORT_artificial_switch_off;
	PORT vt_gui_out_msg.OUTPORT_restart_vt -> vt_compstate_restart.INPORT_artificial_restart;
	PORT vt_gui_out_msg.OUTPORT_start_recording_vt -> vt_compstate_start_recording.INPORT_artificial_start_recording;
	PORT vt_gui_out_msg.OUTPORT_pause_vt -> vt_compstate_pause.INPORT_artificial_pause;
	PORT vt_gui_out_msg.OUTPORT_resume_vt -> vt_compstate_resume.INPORT_artificial_resume;
	PORT vt_gui_out_msg.OUTPORT_fail_vt -> vt_compstate_fail.INPORT_artificial_fail;
	PORT vt_gui_out_msg.OUTPORT_stop_recording_vt -> vt_compstate_stop_recording.INPORT_artificial_stop_recording;
	PORT vt_gui_gui_polling_gui.OUTPORT_switch_on_vt -> vt_compstate_switch_on.INPORT_artificial_switch_on;
	PORT vt_gui_gui_polling_gui.OUTPORT_switch_off_vt -> vt_compstate_switch_off.INPORT_artificial_switch_off;
	PORT vt_gui_gui_polling_gui.OUTPORT_restart_vt -> vt_compstate_restart.INPORT_artificial_restart;
	PORT vt_gui_gui_polling_gui.OUTPORT_start_recording_vt -> vt_compstate_start_recording.INPORT_artificial_start_recording;
	PORT vt_gui_gui_polling_gui.OUTPORT_pause_vt -> vt_compstate_pause.INPORT_artificial_pause;
	PORT vt_gui_gui_polling_gui.OUTPORT_resume_vt -> vt_compstate_resume.INPORT_artificial_resume;
	PORT vt_gui_gui_polling_gui.OUTPORT_fail_vt -> vt_compstate_fail.INPORT_artificial_fail;
	PORT vt_gui_gui_polling_gui.OUTPORT_stop_recording_vt -> vt_compstate_stop_recording.INPORT_artificial_stop_recording;
	PORT vt_compstate_switch_on.OUTPORT_out_msg_vt -> vt_gui_out_msg.INPORT_artificial_out_msg;
	PORT vt_compstate_switch_off.OUTPORT_out_msg_vt -> vt_gui_out_msg.INPORT_artificial_out_msg;
	PORT vt_compstate_restart.OUTPORT_out_msg_vt -> vt_gui_out_msg.INPORT_artificial_out_msg;
	PORT vt_compstate_start_recording.OUTPORT_out_msg_vt -> vt_gui_out_msg.INPORT_artificial_out_msg;
	PORT vt_compstate_pause.OUTPORT_out_msg_vt -> vt_gui_out_msg.INPORT_artificial_out_msg;
	PORT vt_compstate_resume.OUTPORT_out_msg_vt -> vt_gui_out_msg.INPORT_artificial_out_msg;
	PORT vt_compstate_stop_recording.OUTPORT_out_msg_vt -> vt_gui_out_msg.INPORT_artificial_out_msg;
	PORT vt_compstate_fail.OUTPORT_out_msg_vt -> vt_gui_out_msg.INPORT_artificial_out_msg;
	vt_gui_out_msg_gui: data access gui_protected -> vt_gui_out_msg.gui_protected;
	vt_gui_gui_polling_gui_gui: data access gui_protected -> vt_gui_gui_polling_gui.gui_protected;
	vt_compstate_switch_on_compstate: data access compstate_protected -> vt_compstate_switch_on.compstate_protected;
	vt_compstate_switch_off_compstate: data access compstate_protected -> vt_compstate_switch_off.compstate_protected;
	vt_compstate_restart_compstate: data access compstate_protected -> vt_compstate_restart.compstate_protected;
	vt_compstate_start_recording_compstate: data access compstate_protected -> vt_compstate_start_recording.compstate_protected;
	vt_compstate_pause_compstate: data access compstate_protected -> vt_compstate_pause.compstate_protected;
	vt_compstate_resume_compstate: data access compstate_protected -> vt_compstate_resume.compstate_protected;
	vt_compstate_stop_recording_compstate: data access compstate_protected -> vt_compstate_stop_recording.compstate_protected;
	vt_compstate_fail_compstate: data access compstate_protected -> vt_compstate_fail.compstate_protected;
end chip.final;

system deploymentview
end deploymentview;

system implementation deploymentview.final
subcomponents
  chip: process chip.final;
  node1_x86_linux_cv : processor ocarina_processors_x86::x86.linux;
properties
  Actual_Processor_Binding => (reference (node1_x86_linux_cv)) applies to chip;
end deploymentview.final;
end process_package;

-- deploymentview.final
