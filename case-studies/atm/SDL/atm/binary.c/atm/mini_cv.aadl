-- Automatically Generated - For use with AADL2GlueC only - Do NOT modify! --

SUBPROGRAM accept_card
FEATURES
	account:IN PARAMETER DataView::MyString {encoding=>NATIVE;};
END accept_card;

SUBPROGRAM IMPLEMENTATION accept_card.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END accept_card.Ada;

SUBPROGRAM reject_transaction
FEATURES
	w:IN PARAMETER DataView::MyString {encoding=>NATIVE;};
END reject_transaction;

SUBPROGRAM IMPLEMENTATION reject_transaction.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END reject_transaction.Ada;

SUBPROGRAM out_of_service
FEATURES
	w:IN PARAMETER DataView::MyString {encoding=>NATIVE;};
END out_of_service;

SUBPROGRAM IMPLEMENTATION out_of_service.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END out_of_service.Ada;

SUBPROGRAM abort_out
FEATURES
	w:IN PARAMETER DataView::MyString {encoding=>NATIVE;};
END abort_out;

SUBPROGRAM IMPLEMENTATION abort_out.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END abort_out.Ada;

SUBPROGRAM amount
FEATURES
	amount:IN PARAMETER DataView::Amount {encoding=>NATIVE;};
END amount;

SUBPROGRAM IMPLEMENTATION amount.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END amount.Ada;

SUBPROGRAM other_amount
FEATURES
	w:IN PARAMETER DataView::MyString {encoding=>NATIVE;};
END other_amount;

SUBPROGRAM IMPLEMENTATION other_amount.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END other_amount.Ada;

SUBPROGRAM digit
FEATURES
	num:IN PARAMETER DataView::Num {encoding=>NATIVE;};
END digit;

SUBPROGRAM IMPLEMENTATION digit.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END digit.Ada;

SUBPROGRAM ok
FEATURES
	w:IN PARAMETER DataView::MyString {encoding=>NATIVE;};
END ok;

SUBPROGRAM IMPLEMENTATION ok.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END ok.Ada;

SUBPROGRAM transaction_succeseeded
FEATURES
	w:IN PARAMETER DataView::MyString {encoding=>NATIVE;};
END transaction_succeseeded;

SUBPROGRAM IMPLEMENTATION transaction_succeseeded.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END transaction_succeseeded.Ada;

SUBPROGRAM out_msg
FEATURES
	msg:OUT PARAMETER DataView::MyString {encoding=>NATIVE;};
END out_msg;

SUBPROGRAM IMPLEMENTATION out_msg.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END out_msg.Ada;

SUBPROGRAM transaction
FEATURES
	amount:OUT PARAMETER DataView::Amount {encoding=>NATIVE;};
END transaction;

SUBPROGRAM IMPLEMENTATION transaction.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END transaction.Ada;

SUBPROGRAM display
FEATURES
	msg:OUT PARAMETER DataView::MyString {encoding=>NATIVE;};
END display;

SUBPROGRAM IMPLEMENTATION display.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END display.Ada;

SUBPROGRAM eject_card
FEATURES
	w:OUT PARAMETER DataView::MyString {encoding=>NATIVE;};
END eject_card;

SUBPROGRAM IMPLEMENTATION eject_card.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END eject_card.Ada;

SUBPROGRAM check_queue
FEATURES
	res:IN PARAMETER DataView::T_Boolean {encoding=>NATIVE;};
END check_queue;

SUBPROGRAM IMPLEMENTATION check_queue.Ada
PROPERTIES
	FV_Name => "atm";
	Source_Language => Ada;
END check_queue.Ada;

